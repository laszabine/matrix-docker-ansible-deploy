#jinja2: lstrip_blocks: "True"

# Homeserver details
homeserver:

    # The address that this appservice can use to connect to the homeserver.
    address: {{ matrix_mautrix_signal_homeserver_address }}

    # The domain of the homeserver (for MXIDs, etc).
    domain: {{ matrix_mautrix_signal_homeserver_domain }}

# Application service host/registration related details
# Changing these values requires regeneration of the registration.
appservice:

    # The address that the homeserver can use to connect to this appservice.
    address: {{ matrix_mautrix_signal_appservice_address }}

    # The full URI to the database. Only Postgres is currently supported.
    database: {{ matrix_mautrix_signal_database_connection_string }}

    # Provisioning API part of the web server for automated portal creation and fetching information.
    # Used by things like mautrix-manager (https://github.com/tulir/mautrix-manager).
    provisioning:
        # Whether or not the provisioning API should be enabled.
        enabled: true
        # The prefix to use in the provisioning API endpoints.
        prefix: /_matrix/provision/v1
        # The shared secret to authorize users of the API.
        # Set to "generate" to generate and save a new token.
        shared_secret: generate

    # Username of the appservice bot.
    bot_username: {{ matrix_mautrix_signal_appservice_bot_username|to_json }}

    # Authentication tokens for AS <-> HS communication.
    as_token: "{{ matrix_mautrix_signal_appservice_token }}"
    hs_token: "{{ matrix_mautrix_signal_homeserver_token }}"

signal:

    # Path to signald unix socket
    socket_path: /signald/signald.sock

    # Directory for temp files when sending files to Signal. This should be an
    # absolute path that signald can read. For attachments in the other direction,
    # make sure signald is configured to use an absolute path as the data directory.
    outgoing_attachment_dir: /signald/attachments

    # Directory where signald stores avatars for groups.
    avatar_dir: /signald/avatars

    # Directory where signald stores auth data. Used to delete data when logging out.
    data_dir: /signald/data

# Bridge config
bridge:

    # Shared secret for https://github.com/devture/matrix-synapse-shared-secret-auth
    #
    # If set, custom puppets will be enabled automatically for local users
    # instead of users having to find an access token and run `login-matrix`
    # manually.
    # If using this for other servers than the bridge's server,
    # you must also set the URL in the double_puppet_server_map.
    login_shared_secret_map:
        {{ matrix_mautrix_signal_homeserver_domain }}: {{ matrix_mautrix_signal_login_shared_secret|to_json }}

    # Permissions for using the bridge.
    # Permitted values:
    #       user - Use the bridge with puppeting.
    #      admin - Use and administrate the bridge.
    # Permitted keys:
    #        * - All Matrix users
    #   domain - All users on that homeserver
    #     mxid - Specific user
    permissions:
      '{{ matrix_mautrix_signal_homeserver_domain }}': user

# Python logging configuration.
#
# See section 16.7.2 of the Python documentation for more info:
# https://docs.python.org/3.6/library/logging.config.html#configuration-dictionary-schema
logging:
    loggers:
        mau:
            level: {{ matrix_mautrix_signal_log_level }}
        aiohttp:
            level: INFO
    root:
        level: {{ matrix_mautrix_signal_log_level }}
        handlers: [console]
